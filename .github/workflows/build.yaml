name: Build

on:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Get release tag
        if: github.event_name == 'release'
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build Go binary
        run: go build -ldflags "-s -w -X main.GitCommit=$GITHUB_SHA -X main.GitRef=$GITHUB_REF -X main.Version=${RELEASE_TAG:-commit-$GITHUB_SHA}" -o bin/egressd ./
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0


      - name: Run golangci-lint
        # You may pin to the exact commit or the version.
        # uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc
        if: ${{ github.event_name == 'pull_request' }}
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          args: --timeout=5m
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Test
        if: ${{ github.event_name == 'pull_request' }}
        run: go test -race ./...

      - name: Set up QEMU
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'pull_request' }}
          tags: ghcr.io/castai/egressd/egressd:${{ github.sha }}


      - name: Build and push main
        if: ${{ github.event_name != 'pull_request' && github.event_name != 'release' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/castai/egressd/egressd:${{ github.sha }}

      - name: Build and push release
        if: github.event_name == 'release'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: |
            ghcr.io/castai/egressd/egressd:${{ github.sha }}
            ghcr.io/castai/egressd/egressd:latest

      - name: FOSSA scan docker image (agent)
        if: github.event_name == 'release'
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          container: ghcr.io/castai/egressd/egressd:${{ env.RELEASE_TAG }}
