name: Release

on:
  push:                   # Trigger on push events
    branches:
      - '**'              # Specify branches or use '**' for all branches
  release:
    types:
      - published
  workflow_dispatch:      # Allows manual triggering of the workflow

env:
  CR_CONFIGFILE: "${{ github.workspace }}/cr.yaml"
  CR_INDEX_PATH: "${{ github.workspace }}/.cr-index"
  CR_PACKAGE_PATH: "${{ github.workspace }}/.cr-release-packages"
  CR_TOOL_PATH: "${{ github.workspace }}/.cr-tool"
  CHART_PATH: "${{ github.workspace }}/charts/egressd"

jobs:
  release_docker:
    name: Release Docker
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Get release tag or branch name
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - name: Build go binary amd64
        run: go build -ldflags "-s -w -X main.GitCommit=${{ github.sha }} -X main.GitRef=${{ github.ref }} -X main.Version=${{ env.RELEASE_TAG }}" -o bin/egressd-amd64 ./cmd/collector
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Build go binary arm64
        run: go build -ldflags "-s -w -X main.GitCommit=${{ github.sha }} -X main.GitRef=${{ github.ref }} -X main.Version=${{ env.RELEASE_TAG }}" -o bin/egressd-arm64 ./cmd/collector
        env:
          GOOS: linux
          GOARCH: arm64
          CGO_ENABLED: 0

      - name: Build egressd exporter go binary amd64
        run: go build -ldflags "-s -w -X main.GitCommit=${{ github.sha }} -X main.GitRef=${{ github.ref }} -X main.Version=${{ env.RELEASE_TAG }}" -o bin/egressd-exporter-amd64 ./cmd/exporter
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Build egressd exporter go binary arm64
        run: go build -ldflags "-s -w -X main.GitCommit=${{ github.sha }} -X main.GitRef=${{ github.ref }} -X main.Version=${{ env.RELEASE_TAG }}" -o bin/egressd-exporter-arm64 ./cmd/exporter
        env:
          GOOS: linux
          GOARCH: arm64
          CGO_ENABLED: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (egressd collector)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          file: ./Dockerfile
          tags: |
            ghcr.io/hany-mhajna-payu-gpo/egressd:${{ env.RELEASE_TAG }}

      - name: Build and push (egressd exporter)
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          file: ./Dockerfile.exporter
          tags: |
            ghcr.io/hany-mhajna-payu-gpo/egressd-exporter:${{ env.RELEASE_TAG }}

  release_chart:
    name: Release Helm Chart
    runs-on: ubuntu-22.04
    needs: release_docker
    if: ${{ github.event_name == 'release' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Get release tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # ... rest of your steps for releasing the Helm chart ...

