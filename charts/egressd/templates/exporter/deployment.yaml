apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "egressd.exporter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "egressd.exporter.labels" . | nindent 4 }}
    app.kubernetes.io/component: aggregator
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "egressd.exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/exporter/configmap.yaml") . | sha256sum }}
      {{- if .Values.exporter.prometheusScrape.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{.Values.exporter.httpListenPort}}"
      {{- end }}
      {{- with .Values.exporter.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "egressd.exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.exporter.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.exporter.priorityClassName }}
      priorityClassName: {{ .Values.exporter.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "egressd.exporter.serviceAccountName" . }}
      dnsPolicy: {{.Values.exporter.dnsPolicy}}
      securityContext:
        {{- toYaml .Values.exporter.podSecurityContext | nindent 8 }}
      containers:
      - name: exporter
        image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        resources:
            {{- toYaml .Values.exporter.resources | nindent 12 }}
        securityContext:
            {{- toYaml .Values.exporter.containerSecurityContext | nindent 12 }}
        args:
        - "-http-listen-port={{.Values.exporter.httpListenPort}}"
        {{- range $key, $value := .Values.exporter.extraArgs }}
        {{- if $value }}
        - "-{{ $key }}={{ $value }}"
        {{- else }}
        - "-{{ $key }}"
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.exporter.extraLabels }}
        {{- if and $value $key }}
        - "-extra-label={{ $key }}={{ $value }}"
        {{- end }}
        {{- end }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if or .Values.castai.apiKey .Values.castai.apiKeySecretRef }}
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              {{- if eq (get .Values.collector.extraArgs "send-traffic-delta") false }}
                {{- fail "`collector.extraArgs.send-traffic-delta` should be set to `true` when CAST AI is used as sink" }}
              {{- else }}
                {{- if .Values.castai.apiKey }}
                name: "{{- include "egressd.fullname" . }}"
                key: API_KEY
                {{- else if  .Values.castai.apiKeySecretRef }}
                name: {{ .Values.castai.apiKeySecretRef }}
                key: API_KEY
                {{- end }}
              {{- end }}
        {{- end }}
        ports:
        - name: http-server
          containerPort: {{ .Values.exporter.httpListenPort }}
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/egressd/config
        livenessProbe:
          httpGet:
            port: http-server
            path: /healthz
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: http-server
            path: /healthz
          initialDelaySeconds: 5
          periodSeconds: 5
      terminationGracePeriodSeconds: 10
      volumes:
      - name: config
          {{- if .Values.exporter.existingSecretForConfig }}
        secret:
          secretName: {{ .Values.exporter.existingSecretForConfig }}
          {{- else }}
        configMap:
          name: {{ include "egressd.exporter.fullname" . }}
          {{- end }}
      {{- with .Values.exporter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.exporter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.exporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
