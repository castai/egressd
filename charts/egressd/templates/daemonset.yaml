apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "egressd.fullname" . }}
  labels:
    {{- include "egressd.labels" . | nindent 4 }}
    app.kubernetes.io/component: collector
spec:
  selector:
    matchLabels:
      {{- include "egressd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.prometheusScrape.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "6060"
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "egressd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "egressd.serviceAccountName" . }}
      hostNetwork: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: egressd
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - "/usr/local/bin/egressd"
          args:
            - "-export-mode={{.Values.export.mode}}"
        {{- if eq .Values.export.mode "http" }}
            - "-export-http-addr={{ include "egressd.export.http.addr" . }}"
        {{- end }}
        {{- range $key, $value := .Values.extraArgs }}
        {{- if $value }}
            - "-{{ $key }}={{ $value }}"
        {{- else }}
            - "-{{ $key }}"
        {{- end }}
        {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: cilium-bpf-maps
            - mountPath: /var/run/egressd
              name: export-logs
            - mountPath: /hostproc/sys/net/netfilter
              name: netfilter
              mountPropagation: Bidirectional
      dnsPolicy: {{.Values.dnsPolicy}}
      volumes:
        - name: netfilter
          hostPath:
            path: /proc/sys/net/netfilter
        - name: cilium-bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        - name: export-logs
          hostPath:
            path: /var/run/egressd
            type: DirectoryOrCreate
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
